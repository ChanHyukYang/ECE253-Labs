.text
.global _start
	_start:
	LDR R0,=0xFF200000//LEDR ADDRESS
    LDR R1,=0xFF200050//KEYS ADDRESS
	LDR R2,=0xFFFEC600//LOAD VALUE ADDRESS, 8 down is word for A,E, C down word for F
	LDR R3,=50000000//LOAD VALUE
	STR R3,[R2]//LOAD VALUE TO COUNTDOWN IN LOAD VAL. ADDRESS
	MOV R5,#1//LEDR[0] ON
	MOV R6,#0b1000000000//LEDR[9] ON
	ORR R7,R6,R5//INITLAL DISPLAY
	MOV R10,#0//CHECK IF YOU NEED TO SWITCH DIR
	MOV R11,#0//INCREMENT AS YOU SHIFT, USE IT TO CHECK IF YOU NEED TO SWITCH DIRECTION
	MOV R12,#0//CHECK IF KEY IS PRESSED AGAIN OR NOT
	KEY_PRESS1://NEED KEY 3 PRESSED
		LDR R4,[R1]//VALUES OF KEY IN R4
		CMP R4,#8//CHECK IF KEY3 IS ON
		BNE KEY_PRESS1
		MOV R3,#0b11//A, E ARE 2 LEAST SIG BITS IN FFFEC608
		STR R3,[R2,#0x8]//STORE 1 TO A,E -> ENABLE COUTNER AND AUTO RELOAD WHEN DONE
	CYCLE:
		STR R7,[R0]//STORE VALUES TO LEDR DISPLAY
		CMP R10,#0//CHECK IF R10==1(SHIFT OUTWARDS) OR 0(INWARDS)
		BEQ INWARD
		CMP R10, #0//CHECK AGAIN FOR NEXT BRANCH LOOP
		BNE OUTWARD
		
	INWARD:
		BL DELAY
		LDR R4,[R1]//VALUES OF KEY IN R4
		CMP R4,#8//CHECK IF KEY3 IS ON
		BLEQ KEY_PRESS2//if key is pressed, go here
		LSR R6,R6,#1//SHIFT R6 RIGHT 1 BIT
		LSL R5,R5,#1//SHIFT R5 LEFT 1 BIT
		ORR R7, R6, R5//NEW DISPLAY 
		ADD R11,R11,#1
		CMP R11,#4// CHECK IF SWITCH IN DIRECTION IS NEEDED
		BEQ SHIFTCHANGE
		B CYCLE
		
		
	OUTWARD:
		BL DELAY
		LDR R4,[R1]//VALUES OF KEY IN R4
		CMP R4,#8//CHECK IF KEY3 IS ON
		BLEQ KEY_PRESS2//if key is pressed, go here
		LSL R6,R6,#1//SHIFT R6 LEFT 1 BIT
		LSR R5,R5,#1//SHIFT R5 RIGHT 1 BIT
		ORR R7, R6, R5
		SUB R11,R11,#1
		CMP R11,#0
		BEQ SHIFTCHANGE
		B CYCLE
	
	SHIFTCHANGE:
		EOR R10,R10,#1
		B CYCLE
	//SET F BIT TO 1 TO CLEAR
	DELAY:
		LDR R8,[R2,#0xC]//F VAL(TURNS 1 WHEN COUNTER IS DONE)
		CMP R8,#0
		BEQ DELAY
		STR R8,[R2,#0xC]//CLEAR F BIT
		MOV PC, LR//BACK TO INWARD OR OUTWARD EXPAND
	KEY_PRESS2:
		LDR R4,[R1]
		CMP R4,#8
		BEQ KEY_PRESS2
	KEYPRESS3:
		LDR R4,[R1]
		CMP R4,#8
		BNE KEYPRESS3
	KEYPRESS4:
		LDR R4,[R1]
		CMP R4,#8
		BEQ KEYPRESS4
		MOV PC,LR
		
		
	
	
	
	
		
		
		